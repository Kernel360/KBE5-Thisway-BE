name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
      - develop
      - feat/108
  push:
    branches:
      - main
      - develop
      - feat/108

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #
  #   services:
  #     redis:
  #       image: redis:7
  #       ports:
  #         - 6379:6379
  #
  #   steps:
  #     - name: 코드 체크아웃
  #       uses: actions/checkout@v4
  #
  #     - name: JDK 21 설치
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: temurin
  #         java-version: "21"
  #
  #     - name: Gradle 캐시 설정
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.gradle/caches
  #           ~/.gradle/wrapper
  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gradle-
  #
  #     - name: 실행 권한 부여
  #       run: chmod +x ./gradlew
  #
  #     - name: 단위 및 통합 테스트 실행
  #       run: ./gradlew --no-daemon --parallel --info test

  build:
    if: github.event_name == 'push'
    # needs: test
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 21 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Gradle 설정
        uses: gradle/actions/setup-gradle@v4

      - name: 애플리케이션 빌드
        run: ./gradlew clean bootJar

      - name: 파일 확인
        run: ls -al

      - name: 빌드 아티팩트 업로드
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: build/libs/*.jar

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/feat/108'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: 아티팩트 다운로드
        uses: actions/download-artifact@v4
        with:
          name: app
          path: .

      - name: 파일 확인
        run: ls -al

      - name: EC2로 JAR 복사
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "*.jar"
          target: "/home/ec2-user"

      - name: EC2에서 애플리케이션 실행
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # (1) 기존에 띄운 앱 프로세스가 있으면 종료
            pkill -f 'thisway.*\.jar' || echo "No existing process"

            # (2) 새로 애플리케이션 실행 (백그라운드 + 로그 파일 기록)
            nohup java -jar /home/ec2-user/thisway*.jar \
              > /home/ec2-user/thisway.log 2>&1 < /dev/null &
            disown

            echo "Application started with PID $!"
